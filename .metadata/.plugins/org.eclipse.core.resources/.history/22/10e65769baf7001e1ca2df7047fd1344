package com.example;

Shape.java

public interface Shape
{
   void draw();
}

Step 2->
Create concrete classes implementing the same interface.
1-Rectangle.java
public class Rectangle implements Shape
{
   @Override
   public void draw()
   {
     System.out.println("Inside Rectangle::draw() method.");
   }
}

2-Square.java
public class Square implements Shape
{
   @Override
   public void draw()
   {
      System.out.println("Inside Square::draw() method.");
   }
}

3-Circle.java
public class Circle implements Shape
{
   @Override
   public void draw()
 {
      System.out.println("Inside Circle::draw() method.");
   }
}

Step 3->
Create a Factory to generate object of concrete class based on given information.
ShapeFactory.java
public class ShapeFactory
{
           
   //use getShape method to get object of type shape
   public Shape getShape(String shapeType)
   {
      if(shapeType == null){
         return null;
      }               
      if(shapeType.equalsIgnoreCase("CIRCLE")){
         return new Circle();
        
      } else if(shapeType.equalsIgnoreCase("RECTANGLE")){
         return new Rectangle();
        
      } else if(shapeType.equalsIgnoreCase("SQUARE")){
         return new Square();
      }
     
      return null;
   }
}


public class Test
{
  public static void main(String[] args)
 {
      ShapeFactory shapeFactory = new ShapeFactory();

      Shape shape1 = shapeFactory.getShape("CIRCLE");
              shape1.draw();

     Shape shape2 = shapeFactory.getShape("RECTANGLE");
                shape2.draw();

      Shape shape3 = shapeFactory.getShape("SQUARE");
             shape3.draw();
   } 
}
