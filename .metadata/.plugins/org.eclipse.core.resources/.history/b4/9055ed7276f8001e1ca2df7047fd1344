package com.example;



// Inteface - Shape
interface Shape
{
   void draw();
}

// Class - Rectangle
class Rectangle implements Shape
{
   @Override
   public void draw()
   {
     System.out.println("Inside Rectangle draw() method.");
   }
}


// Class - Square
class Square implements Shape
{
   @Override
   public void draw()
   {
      System.out.println("Inside Square draw() method.");
   }
}

// Class - Circle
class Circle implements Shape
{
   @Override
   public void draw()
 {
      System.out.println("Inside Circle draw() method.");
   }
}

// Class ShapeFactory
class ShapeFactory
{
           
   //use getShape method to get object of type shape
   public Shape getShape(String shapeType)
   {
      if(shapeType == null){
         return null;
      }               
      if(shapeType.equalsIgnoreCase("CIRCLE")){
         return new Circle();
        
      } else if(shapeType.equalsIgnoreCase("RECTANGLE")){
         return new Rectangle();
        
      } else if(shapeType.equalsIgnoreCase("SQUARE")){
         return new Square();
      }
     
      return null;
   }
}

// Class - Test 
public class Test
{
  public static void main(String[] args)
 {
      ShapeFactory shapeFactory = new ShapeFactory();

      Shape shape1 = shapeFactory.getShape("CIRCLE");
              shape1.draw();

     Shape shape2 = shapeFactory.getShape("RECTANGLE");
                shape2.draw();

      Shape shape3 = shapeFactory.getShape("SQUARE");
             shape3.draw();
   } 
}
